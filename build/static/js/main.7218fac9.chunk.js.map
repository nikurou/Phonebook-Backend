{"version":3,"sources":["services/phonebookServices.js","components/Numbers.js","components/FilterSearch.js","components/PhoneBookForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Numbers","persons","filter","handleDeleteUser","filteredArray","element","name","toLowerCase","includes","map","person","key","number","onClick","FilterSearch","handleFilterChange","value","onChange","PhoneBookForm","handleNameChange","addPerson","handleNumberChange","onSubmit","type","Notification","message","notificationType","console","log","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notification","setNotification","setNotifactionType","useEffect","phonebookService","initialPeople","replaceNumber","originalPersonObject","find","trim","updatedPersonObject","personCopy","JSON","parse","stringify","notify","setTimeout","event","target","preventDefault","newPersonObject","p","length","window","confirm","object","concat","personObject","e","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7218fac9.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons' //Relative URL since backend/frontend on same address\r\n\r\nconst getAll = () =>{ \r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from'react';\r\n\r\n//Display of the phonebook contents\r\nconst Numbers = ({persons, filter, handleDeleteUser}) =>{\r\n\r\n    const filteredArray = persons.filter(element => (element.name.toLowerCase()).includes(filter.toLowerCase()) )\r\n    \r\n    return(\r\n      <div>\r\n        {filteredArray.map(person => \r\n          <div key = {person.name}>\r\n            <span> {person.name} {person.number} </span> \r\n            <button  onClick = {()=>handleDeleteUser(person)}> Delete </button>\r\n            <br/>\r\n          </div>\r\n          )}\r\n      </div>\r\n    )\r\n  }\r\n  \r\nexport default Numbers;\r\n","import React from 'react';\r\n\r\nconst FilterSearch = ({filter, handleFilterChange}) => {\r\n    return(\r\n      <div>\r\n        <span> filter shown with: <input value = {filter} onChange = {handleFilterChange}/></span>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default FilterSearch","import React from'react';\r\n\r\nconst PhoneBookForm = ({name, number, handleNameChange, addPerson, handleNumberChange}) => {\r\n    return(\r\n        <form onSubmit = {addPerson}>\r\n          <div>\r\n            name: <input value = {name} onChange = {handleNameChange} /> <br/>\r\n            number: <input value = {number} onChange = {handleNumberChange}/>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\" >add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n  }\r\n\r\n  export default PhoneBookForm","import React from 'react'\r\n\r\nconst Notification = ({message, notificationType}) =>{\r\n\r\n    if(message === ''){\r\n      return <div></div>\r\n    }\r\n  \r\n    console.log(`notification type: ${notificationType}`)\r\n   \r\n    return(\r\n      <div className = {notificationType}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useEffect, useState } from 'react'\r\nimport phonebookService from './services/phonebookServices'\r\nimport Numbers from './components/Numbers'\r\nimport FilterSearch from './components/FilterSearch'\r\nimport PhoneBookForm from './components/PhoneBookForm'\r\nimport Notification from './components/Notification'\r\nimport './App.css'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ notification, setNotification] = useState('')\r\n  const [ notificationType, setNotifactionType ] = useState('')\r\n\r\n  //Populate Persons with data from db.json\r\n  useEffect(() => {\r\n    phonebookService\r\n      .getAll()\r\n      .then(initialPeople => {\r\n        setPersons(initialPeople)\r\n      })\r\n  }, [])\r\n\r\n  //So that anytime the user alters the input the form, we update the value of newName \r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault() //Prevent reload of page\r\n    const newPersonObject = {name: newName, number: newNumber} \r\n\r\n    //check if person is already in phonebook before adding\r\n\r\n    if( persons.filter(p => p.name.toLowerCase().trim() === newPersonObject.name.toLowerCase().trim()).length === 1){ \r\n      if(window.confirm(`${newPersonObject.name} is already added to the phonebook, replace the old number with a new one?`)){\r\n        replaceNumber(newPersonObject)\r\n      }\r\n    } else{\r\n      phonebookService.create(newPersonObject).then(object => setPersons(persons.concat(object)))\r\n      notify(`Added ${newPersonObject.name}`, 'add')\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const replaceNumber = (person) => {\r\n    //The person object doesn't have an ID set, we must get the old one.\r\n    const originalPersonObject = persons.find(element => element.name.toLowerCase().trim() === person.name.toLowerCase().trim())\r\n    console.log('OGPERSONOBJ:',originalPersonObject)\r\n    const id = originalPersonObject.id;\r\n    const updatedPersonObject = {name: person.name, number: person.number, id: id}\r\n    \r\n    //Update the Database\r\n    console.log(id, updatedPersonObject)\r\n    phonebookService.update(id, updatedPersonObject)\r\n\r\n    //We also have to update the original array\r\n    let personCopy = JSON.parse(JSON.stringify(persons))\r\n    personCopy[id-1] = updatedPersonObject\r\n    setPersons(personCopy)\r\n    notify(`Added ${updatedPersonObject.name}`, 'add')\r\n  }\r\n\r\n  const notify = (message, notificationType) => {\r\n    setNotification(message)\r\n    setNotifactionType(notificationType)\r\n    setTimeout(()=>{\r\n      setNotification('')\r\n    },5000)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const handleDeleteUser = (personObject) => {\r\n    if(window.confirm(`Delete ${personObject.name}?`)){\r\n      console.log(`ID = ${personObject.id}`)\r\n      phonebookService.remove(personObject.id).then(response => {\r\n          setPersons( persons.filter(e => e !== personObject))\r\n          notify(`Deleted ${personObject.name}`, 'success')\r\n      }).catch(error=> {\r\n             notify(`Information of ${personObject.name} has already been removed from server`, 'error')\r\n      })\r\n      \r\n      // Axios.get('http://localhost:3001/persons/'+ personObject.id)\r\n      //      .then(response => {console.log('success')})\r\n      //      .catch(error => {\r\n      //        notify(`Information of ${personObject.name} has already been removed from server`, 'error')\r\n      //      })\r\n      \r\n      // Axios.delete('http://localhost:3001/persons/'+ personObject.id)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message = {notification} notificationType = {notificationType}/>\r\n      <FilterSearch filter = {filter} handleFilterChange = {handleFilterChange}/>\r\n      <h2>add a new</h2>\r\n      <PhoneBookForm name = {newName} number = {newNumber} handleNameChange = {handleNameChange} addPerson = {addPerson} handleNumberChange = {handleNumberChange}/>\r\n      <h2>Numbers</h2>\r\n      <Numbers persons = {persons} filter = {filter} handleDeleteUser = {handleDeleteUser}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}